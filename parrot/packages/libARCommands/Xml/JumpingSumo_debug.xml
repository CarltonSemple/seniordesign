<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (C) 2014 Parrot SA

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the 
      distribution.
    * Neither the name of Parrot nor the names
      of its contributors may be used to endorse or promote products
      derived from this software without specific prior written
      permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
    OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
    AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
    OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
    OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.
-->

<!--
   Important notes :
   ALWAYS ADD NEW THINGS AT THE END OF THE PARENT TAG !
   NEVER MODIFY EXISTING class/command/arg !

   Comments ("comm" attributes) are mandatory for all classes/commands/args
   For each comment : 1st line will be used as brief (if applicable) +
   1st line of complete desc. Other lines will be used as complete desc

   How to add a new class :
   <class name="myNewClassName" >           | No spaces ! [A-Za-z0-9_]
     Comment about the class                | Inlcuded in Doxygen doc
     <cmd> ... </cmd>                       | List of commands
     <cmd> ... </cmd>
   </class>

   How to add a new command (without args) to a class :
   <cmd name="myNewCommandName" >           | No spaces ! [A-Za-z0-9_]
     Comment about the command              | Included in Doxygen doc
   </cmd>

   How to add a new command (with args) to a class :
   <cmd name="myNewCommandWithArgs" >       | No spaces ! [A-Za-z0-9_]
     Comment about the command              | Included in Doxygen doc
     <arg name="argName" type="argType" >   | Repeat for each arg
       Comment about the arg                | argName must be a valid C variable name
     </arg>                                 | argType must be a valid type (see below)
     ...                                    | Comment included in Doxygen doc
   </cmd>

   List of valid types (associated C type) :
   -  i8 /  u8 : signed/unsigned  8 bit integer ([u]int8_t)
   - i16 / u16 : signed/unsigned 16 bit integer ([u]int16_t)
   - i32 / u32 : signed/unsigned 32 bit integer ([u]int32_t)
   - i64 / u64 : signed/unsigned 64 bit integer ([u]int64_t)
   -     float : IEEE-754 single precision floating point number (float)
   -    double : IEEE-754 double precision floating point number (double)
   -    string : NULL-terminated UTF-8 String. (char *)
-->


<project id="131">
  All debug commands specific to the Jumping Sumo.

  <class name="Jump" id="0">
    All debug commands.

    <cmd name="setJumpMotor">
      Ask the JS speed and turn ratio.

      <arg name="speed" type="i8">
        Jump motor speed value [-100:100].
      </arg>

    </cmd>

    <cmd name="setCameraOrientation">
        Change the camera vertical orientation.
        <arg name="speedIncrement" type="i8">
            Orientation increment speed [-100:100].
        </arg>
    </cmd>
    
  </class>

  <class name="Audio" id="1">
    All audio debug commands.

    <cmd name="playSoundWithName">
      Play a sound from a file.

      <arg name="filename" type="string">
        Name of the file.
      </arg>

    </cmd>
    
  </class>

  <class name="Misc" id="2">
    All debug commands that you don't know where ot put.

    <cmd name="debugEvent">
      Command to create an event in colibry state machine for all kinds of debug.
    </cmd>
    
  </class>

  <class name="Animation" id="3">
    Triggerable animations.

    <cmd name="playAnimation">
        Play an animation.
        
        <arg name="id" type="enum">
            Animation ID.

              <enum name="stop">
                  Stop ongoing animation.
              </enum>
              <enum name="spin">
                  Start a spin animation.
              </enum>
              <enum name="tap">
                  Start a tap animation.
              </enum>
              <enum name="slowshake">
                  Start a slow shake animation.
              </enum>
              <enum name="metronome">
                  Start a Metronome animation.
              </enum>
              <enum name="ondulation">
                  Start a standing dance animation.
              </enum>
              <enum name="spinjump">
                  Start a spin jump animation.
              </enum>
              <enum name="spintoposture">
                  Start a spin that end in standing posture, or in jumper if it was standing animation.
              </enum>
              <enum name="spiral">
                  Start a spiral animation.
              </enum>
              <enum name="slalom">
                  Start a slalom animation.
              </enum>
              <enum name="userscript">
                  Start a user-defined script.
              </enum>
        </arg>
    </cmd>
    <cmd name="addCapOffset">
        Add the specified offset to the current cap.
        <arg name="offset" type="float">
            Offset value in radians.
        </arg>
    </cmd>
  </class>

  <class name="UserScript" id="4">
    All commands related to user scripts.

    <cmd name="userScriptUploaded">
      Command to notify the firmware that a new user script was uploaded.
    </cmd>
  </class>

  <class name="UserScriptState" id="5">
    All status information related with user scripts.
    <cmd name="userScriptParsed">
      Notification sent by the firmware after attempting to parse the user script.
      <arg name="success" type="u8">
        Whether the script was loaded successfully (0 = failed, 1 = success).
      </arg>
      <arg name="message" type="string">
        Error message.
      </arg>
    </cmd>
  </class>

</project>
